// <auto-generated />
using System;
using KidsToyHive.Domain.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KidsToyHive.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190724134136_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview7.19362.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KidsToyHive.Domain.Models.Brand", b =>
                {
                    b.Property<Guid>("BrandId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Name");

                    b.Property<int>("Version");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("KidsToyHive.Domain.Models.Card", b =>
                {
                    b.Property<Guid>("CardId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int>("Version");

                    b.HasKey("CardId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("KidsToyHive.Domain.Models.CardLayout", b =>
                {
                    b.Property<Guid>("CardLayoutId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int>("Version");

                    b.HasKey("CardLayoutId");

                    b.ToTable("CardLayouts");
                });

            modelBuilder.Entity("KidsToyHive.Domain.Models.Customer", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.Property<int>("Version");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("KidsToyHive.Domain.Models.Dashboard", b =>
                {
                    b.Property<Guid>("DashboardId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Options");

                    b.Property<Guid>("ProfileId");

                    b.Property<int>("Version");

                    b.HasKey("DashboardId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Dashboards");
                });

            modelBuilder.Entity("KidsToyHive.Domain.Models.DashboardCard", b =>
                {
                    b.Property<Guid>("DashboardCardId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CardId");

                    b.Property<Guid>("DashboardId");

                    b.Property<string>("Name");

                    b.Property<string>("Options");

                    b.Property<int>("Version");

                    b.HasKey("DashboardCardId");

                    b.HasIndex("DashboardId");

                    b.ToTable("DashboardCards");
                });

            modelBuilder.Entity("KidsToyHive.Domain.Models.DigitalAsset", b =>
                {
                    b.Property<Guid>("DigitalAssetId")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Bytes");

                    b.Property<string>("ContentType");

                    b.Property<string>("Name");

                    b.HasKey("DigitalAssetId");

                    b.ToTable("DigitalAssets");
                });

            modelBuilder.Entity("KidsToyHive.Domain.Models.HtmlContent", b =>
                {
                    b.Property<Guid>("HtmlContentId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.Property<int>("Version");

                    b.HasKey("HtmlContentId");

                    b.ToTable("HtmlContents");
                });

            modelBuilder.Entity("KidsToyHive.Domain.Models.InventoryItem", b =>
                {
                    b.Property<Guid>("InventoryItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<int>("Version");

                    b.HasKey("InventoryItemId");

                    b.ToTable("InventoryItems");
                });

            modelBuilder.Entity("KidsToyHive.Domain.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("SignatureId");

                    b.Property<Guid?>("SignatureOrderSignatureId");

                    b.Property<byte>("State");

                    b.Property<int>("Version");

                    b.HasKey("OrderId");

                    b.HasIndex("SignatureOrderSignatureId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("KidsToyHive.Domain.Models.OrderItem", b =>
                {
                    b.Property<Guid>("OrderItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<Guid?>("OrderId");

                    b.Property<int>("Version");

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("KidsToyHive.Domain.Models.OrderSignature", b =>
                {
                    b.Property<Guid>("OrderSignatureId")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Bytes");

                    b.Property<string>("FullName");

                    b.Property<Guid>("OrderId");

                    b.HasKey("OrderSignatureId");

                    b.ToTable("OrderSignature");
                });

            modelBuilder.Entity("KidsToyHive.Domain.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Name");

                    b.Property<int>("Version");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("KidsToyHive.Domain.Models.ProductCategory", b =>
                {
                    b.Property<Guid>("ProductCategoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("Version");

                    b.HasKey("ProductCategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("KidsToyHive.Domain.Models.Profile", b =>
                {
                    b.Property<Guid>("ProfileId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AvatarUrl");

                    b.Property<bool>("IsDefault");

                    b.Property<string>("Name");

                    b.Property<byte>("Type");

                    b.Property<Guid>("UserId");

                    b.Property<int>("Version");

                    b.HasKey("ProfileId");

                    b.HasIndex("UserId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("KidsToyHive.Domain.Models.Role", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("Version");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("KidsToyHive.Domain.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password");

                    b.Property<byte[]>("Salt");

                    b.Property<string>("Username");

                    b.Property<int>("Version");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KidsToyHive.Domain.Models.Dashboard", b =>
                {
                    b.HasOne("KidsToyHive.Domain.Models.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KidsToyHive.Domain.Models.DashboardCard", b =>
                {
                    b.HasOne("KidsToyHive.Domain.Models.Dashboard", null)
                        .WithMany("DashboardCards")
                        .HasForeignKey("DashboardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KidsToyHive.Domain.Models.Order", b =>
                {
                    b.HasOne("KidsToyHive.Domain.Models.OrderSignature", "Signature")
                        .WithMany()
                        .HasForeignKey("SignatureOrderSignatureId");
                });

            modelBuilder.Entity("KidsToyHive.Domain.Models.OrderItem", b =>
                {
                    b.HasOne("KidsToyHive.Domain.Models.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("KidsToyHive.Domain.Models.Profile", b =>
                {
                    b.HasOne("KidsToyHive.Domain.Models.User", "User")
                        .WithMany("Profiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
